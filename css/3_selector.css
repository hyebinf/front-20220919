/*
    상속(inheritance) : 부모요소에 적용된 스타일이 자식요소에서 적용된다.
    margin, padding 처럼 상속시 레이아웃에 문제가 생기는 속성을 상속x.
    텍스트 관련된 속성이 주로 상속 => ex) color, font-size, text-align 등
*/
/*
    1. 전체 선택자
        - html 문서내의 모든 요소를 선택한다.
 */
* {
  margin: 0;
}

/* 
    2. html
     -주로 텍스트 관련된 속성을 지정하여 모든 글씨에 공통으로 적용한다.
 */
html {
  font-size: 24px;
  padding: 20px;
}
:root {
  font-size: 14px;
}
/*
    3. :root
        - html과 동일하지만 명시도(우선 순위)가 높다.
*/
/* 
    4. 타입(태그) 선택자
        - 태그의 종류로 요소를 선택한다. 문서 내에 모든 해당태그에 모두 적용된다.
*/

p {
  /* 문서 내의 모든 p태그 padding 적용 */
  padding: 10px 0;
}

/* 
    5. 클래스 선택자
     - 적용하고자 하는 요소에 class 속성 값을 지정한다.
     - css에는 ".클래스명"의 형식으로 작성한다.
     - 해당 클래스명을 가진 모든 요소에 적용된다 => 중복 허용 o
     - 하나의 요소가 여러개의 클래스명을 가질 수 있다. => 복수 허용 o
     => class 속성 값에 띄어쓰기로 구분하여 여러 클래스 허용.
*/

.box {
  /* box라는 클래스를 가진 모든 요소에 적용 */
  width: 100px;
  height: 100px;
  border: 3px solid red;
}

.black {
  border-color: black;
}

/* 
    6. 아이디 클래스
        - 적용하고자하는 요소에 id 속성 값을 지정한다.
        - css "#아이디명"의 형식으로 작성한다.
        - 해당 아이디명을 가진 모든 요소에 적용이 되기는 하지만 중복허용 x
        - 하나의 요소에 여러개의 아이디값을 가질수 없다. => 복수 허용x
 */

#contentBox {
  background-color: #ddd;
}

/* 
    7. 일치 선택자
        - 여러 조건을 모두 충족하는 요소에만 적용된다.
        - "선택자 1. 클래스명#아이디명" 여러 선택자를 띄어쓰기 없이 붙여서 작성.

*/
h1.red {
  color: red;
}

/* 
    8. 자식 선택자 
        - 요소의 바로 밑에 있는 자식요소에만 적용한다.
         => ex) ul 태그 안에 바로 밑에 li에만 적용
*/

ul > li {
  border: 1px solid green;
}

/* 
    9. 후손 선택자
        - 해당 하는 모든 후손요소에 적용이 된다.
            => ex) ul 태그안에 있는 모든 li에 적용 o.

*/

ul li {
  padding: 10px;
}

/* 
    10. 가상 클래스
     -특정 조건에 만족하는 요소에만 적용된다.
*/
ol li:hover {
  /* ol 태그 안의 li 중 마우스가 올라간 li만 적용 */
  color: red;
}

ol li:active {
  /* ol 태그 안의 li 중 클릭 중인 li만 적용 */
  color: green;
}

ol li:nth-child(2) {
  /* ol 자식 요소 중 두번째 자식요소인 li만 적용 */
  border: 1px solid #ddd;
}

/* 
    11. 가상 요소
        -html 문서 상에 작성되지 않았지만 가상의 요소를 추가하여 스타일을 적용한다. 
*/
ol li:hover::after {
  content: "";
  border: 2px solid black;
  width: 10px;
  height: 10px;
  display: inline-block;
}
